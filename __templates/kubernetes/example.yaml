---
apiVersion: v1
kind: Namespace
metadata:
  name: <NAMESPACE>
# ------------------------------------------------------------------------------
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: <APP_NAME> # name of the deployment
  namespace: <NAMESPACE> # name of the namespace
  labels:
    app: <APP_NAME> # name of your application
# .......................................
spec:
  replicas: 1 # Number of replicas
  serviceName: <APP_NAME>
  selector:
    matchLabels:
      app: <APP_NAME> # name of your application
  template:
    metadata:
      labels:
        app: <APP_NAME> # name of your application
    spec:
      containers:
        - name: <APP_NAME> # name of the container
          image: <SOURCE>:<VERSION> # the image you want to run
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
          env:
            - name: PORT
              value: "8080"
          ports:
            - name: http
              containerPort: 8080 # the port that your application uses
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            timeoutSeconds: 2
            initialDelaySeconds: 15
          volumeMounts:
            - name: data
              mountPath: /app/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        volumeMode: Filesystem
        resources:
          requests:
            storage: 1Gi
# ------------------------------------------------------------------------------
---
apiVersion: v1
kind: Service
metadata:
  name: <APP_NAME>
  namespace: <NAMESPACE>
# .......................................
spec:
  selector:
    app: <APP_NAME>
  type: ClusterIP
  # ClusterIP means this service can be accessed by any pod in the cluster
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
# ------------------------------------------------------------------------------
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: <APP_NAME>
  namespace: <NAMESPACE>
  annotations:
    cert-manager.io/cluster-issuer: vm-traefik-cluster-issuer
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: ""
# .......................................
spec:
  rules:
    - host: <APP_NAME>.home.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: <APP_NAME> # the name of the service
                port:
                  number: 3001 # service port-number
  tls:
    - hosts:
        - <APP_NAME>.home.local
      secretName: <APP_NAME>.home.local
# ------------------------------------------------------------------------------
